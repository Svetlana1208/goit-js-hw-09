{"mappings":"gfAAAA,EAAA,SAEA,IAMIC,EACAC,EACAC,EAREC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,UAC9BE,KAAMH,SAASC,cAAc,SAC7BG,OAAQJ,SAASC,cAAc,YAK7BI,EAAW,EAIfP,EAAKI,MAAMI,iBAAiB,SAAS,SAACC,GACpCZ,EAAQa,OAAOD,EAAEE,cAAcC,M,IAGjCZ,EAAKK,KAAKG,iBAAiB,SAAS,SAACC,GACnCX,EAAOY,OAAOD,EAAEE,cAAcC,M,IAGhCZ,EAAKM,OAAOE,iBAAiB,SAAS,SAACC,GACrCV,EAASW,OAAOD,EAAEE,cAAcC,M,IAGlCZ,EAAKC,KAAKO,iBAAiB,UAE3B,SAASK,EAAUC,GACjBA,EAAMC,iBAGU,SAACC,EAAUC,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQM,SAASC,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,QAE5EG,EAAKK,SAASC,OAAOG,QAAQ,sBAAqCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,GAE3EnB,E,IAKHgC,CAjBJvB,GAAY,EAiBgBV,GACvBkC,MAAK,SAAAC,G,OAAUC,QAAQC,IAAIF,E,IAC3BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,IAC3BC,SAAQ,WACPxC,GAASC,EACNS,EAAWR,GACdc,EAAUC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.delay'),\n  step: document.querySelector('.step'),\n  amount: document.querySelector('.amount'),}\n\nlet delay;\nlet step;\nlet amount;\nlet position = 0;\nlet intervalId;\nlet createPromise;\n\nrefs.delay.addEventListener('input', (e) => {\n  delay = Number(e.currentTarget.value);\n})\n\nrefs.step.addEventListener('input', (e) => {\n  step = Number(e.currentTarget.value);\n})\n\nrefs.amount.addEventListener('input', (e) => {\n  amount = Number(e.currentTarget.value);\n})\n\nrefs.form.addEventListener('submit', generator);\n\nfunction generator(event) {\n  event.preventDefault();\n  position += 1;\n\n  createPromise = (position, delay) => {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => { \n        if (shouldResolve) {\n          resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n        } else {\n          reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n        }\n      }, step);\n\n      });\n    };\n  \n      createPromise(position, delay)\n      .then(result => console.log(result))\n      .catch(error => console.log(error))\n      .finally(() => {\n        delay += step;\n        if(position < amount) {\n        generator(event)}\n      })\n};\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$position","addEventListener","e","Number","currentTarget","value","$ce04d3a99e08e73b$var$generator","event","preventDefault","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notiflix","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise","then","result","console","log","catch","error","finally"],"version":3,"file":"03-promises.4b031754.js.map"}