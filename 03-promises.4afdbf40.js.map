{"mappings":"YAAA,IAQIA,EACAC,EACAC,EAVEC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,UAC9BE,KAAMH,SAASC,cAAc,SAC7BG,OAAQJ,SAASC,cAAc,WAC/BI,OAAQL,SAASC,cAAc,WAM7BK,EAAW,EAEfR,EAAKI,MAAMK,iBAAiB,SAAS,SAACC,GACpCb,EAAQc,OAAOD,EAAEE,cAAcC,M,IAGjCb,EAAKK,KAAKI,iBAAiB,SAAS,SAACC,GACnCZ,EAAOa,OAAOD,EAAEE,cAAcC,M,IAGhCb,EAAKM,OAAOG,iBAAiB,SAAS,SAACC,GACrCX,EAASY,OAAOD,EAAEE,cAAcC,M,IAGlCb,EAAKC,KAAKQ,iBAAiB,UAE3B,SAAaK,GACXA,EAAMC,iBACNP,GAAY,EAEZ,IAgBMQ,EAAa,KAEjBA,EAAaC,aAAY,WAlBL,IAACC,EAAUC,GAAVD,EAmBLV,EAnBeW,EAmBLtB,EAjBnB,IAAIuB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAELH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,KAQFS,MAAK,SAAAC,G,OAAUC,QAAQC,IAAIF,E,IAC3BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,IAC3BC,SAAQ,WACJ1B,IAAaT,GAChBoC,cAAcnB,E,MAEflB,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.delay'),\n  step: document.querySelector('.step'),\n  amount: document.querySelector('.amount'),\n  submit: document.querySelector('button'),\n}\n\nlet delay;\nlet step;\nlet amount;\nlet position = 0;\n\nrefs.delay.addEventListener('input', (e) => {\n  delay = Number(e.currentTarget.value);\n})\n\nrefs.step.addEventListener('input', (e) => {\n  step = Number(e.currentTarget.value);\n})\n\nrefs.amount.addEventListener('input', (e) => {\n  amount = Number(e.currentTarget.value);\n})\n\nrefs.form.addEventListener('submit', zxc);\n\nfunction zxc(event) {\n  event.preventDefault();\n  position += 1;\n\n  const createPromise = (position, delay) => {\n\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        \n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n      });\n    };\n  \n    let intervalId = null;\n\n    intervalId = setInterval(() => {\n      createPromise(position, delay)\n      .then(result => console.log(result))\n      .catch(error => console.log(error))\n      .finally(() => {\n        if(position === amount) {\n        clearInterval(intervalId);}\n      });\n    }, step); \n};"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submit","$ce04d3a99e08e73b$var$position","addEventListener","e","Number","currentTarget","value","event","preventDefault","intervalId","setInterval","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","result","console","log","catch","error","finally","clearInterval"],"version":3,"file":"03-promises.4afdbf40.js.map"}