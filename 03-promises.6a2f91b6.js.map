{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,UAC9BE,KAAMH,SAASC,cAAc,SAC7BG,OAAQJ,SAASC,cAAc,YAEjC,IAAII,EACAC,EACAC,EAGAC,EAFAC,EAAW,EAIfX,EAAKI,MAAMQ,iBAAiB,SAAUC,IACpCN,EAAQO,OAAOD,EAAEE,cAAcC,MAAM,IAGvChB,EAAKK,KAAKO,iBAAiB,SAAUC,IACnCL,EAAOM,OAAOD,EAAEE,cAAcC,MAAM,IAGtChB,EAAKM,OAAOM,iBAAiB,SAAUC,IACrCJ,EAASK,OAAOD,EAAEE,cAAcC,MAAM,IAGxChB,EAAKC,KAAKW,iBAAiB,UAE3B,SAASK,EAAUC,GACjBA,EAAMC,iBACNR,GAAY,EAEZD,EAAgB,CAACU,EAAUC,IAClB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,IAKTX,EAAcC,EAAUJ,GACvBsB,MAAKC,GAAUC,QAAQC,IAAIF,KAC3BG,OAAMC,GAASH,QAAQC,IAAIE,KAC3BC,SAAQ,KACP5B,GAASC,EACNG,EAAWF,GACdQ,EAAUC,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.delay'),\n  step: document.querySelector('.step'),\n  amount: document.querySelector('.amount'),}\n\nlet delay;\nlet step;\nlet amount;\nlet position = 0;\nlet intervalId;\nlet createPromise;\n\nrefs.delay.addEventListener('input', (e) => {\n  delay = Number(e.currentTarget.value);\n})\n\nrefs.step.addEventListener('input', (e) => {\n  step = Number(e.currentTarget.value);\n})\n\nrefs.amount.addEventListener('input', (e) => {\n  amount = Number(e.currentTarget.value);\n})\n\nrefs.form.addEventListener('submit', generator);\n\nfunction generator(event) {\n  event.preventDefault();\n  position += 1;\n\n  createPromise = (position, delay) => {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => { \n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n\n      });\n    };\n  \n      createPromise(position, delay)\n      .then(result => console.log(result))\n      .catch(error => console.log(error))\n      .finally(() => {\n        delay += step;\n        if(position < amount) {\n        generator(event)}\n      })\n};\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$position","addEventListener","e","Number","currentTarget","value","$47d4ff9957288465$var$generator","event","preventDefault","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","result","console","log","catch","error","finally"],"version":3,"file":"03-promises.6a2f91b6.js.map"}